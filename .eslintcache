[{"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\email.js":"1","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\App.js":"2","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\index.js":"3","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\stringDiff.js":"4","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\dictionary.js":"5","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Bio.js":"6","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Contact.js":"7","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Homepage.js":"8","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Resume.js":"9","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\WordSearchForm.js":"10","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\config\\paths.js":"11","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Header\\index.js":"12","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Logo\\index.js":"13","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Error.js":"14","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Footer\\index.js":"15","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Logo\\GithubIcon.js":"16","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\Fonts\\Fonts.js":"17","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\use-event-listener.js":"18","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Logo\\GithubIcon-lg.js":"19","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Header\\index1.js":"20","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\WordSearch2.js":"21","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\stringDiff2.js":"22","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\ColorSwitch\\index.js":"23","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\theme\\index.js":"24","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\theme\\styles.js":"25","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Button\\index.js":"26"},{"size":1519,"mtime":1610465705191,"results":"27","hashOfConfig":"28"},{"size":1489,"mtime":1611945913768,"results":"29","hashOfConfig":"28"},{"size":478,"mtime":1611941850002,"results":"30","hashOfConfig":"28"},{"size":630,"mtime":1609091881700,"results":"31","hashOfConfig":"28"},{"size":458,"mtime":1609088373587,"results":"32","hashOfConfig":"28"},{"size":5424,"mtime":1611866461379,"results":"33","hashOfConfig":"28"},{"size":5902,"mtime":1611866473466,"results":"34","hashOfConfig":"28"},{"size":1254,"mtime":1611947714667,"results":"35","hashOfConfig":"28"},{"size":1216,"mtime":1611871983639,"results":"36","hashOfConfig":"28"},{"size":12498,"mtime":1611952657831,"results":"37","hashOfConfig":"28"},{"size":610,"mtime":1611952349351,"results":"38","hashOfConfig":"28"},{"size":4293,"mtime":1611950846899,"results":"39","hashOfConfig":"28"},{"size":5819,"mtime":1611871042614,"results":"40","hashOfConfig":"28"},{"size":254,"mtime":1611866480003,"results":"41","hashOfConfig":"28"},{"size":1847,"mtime":1611693134309,"results":"42","hashOfConfig":"28"},{"size":1481,"mtime":1611760867997,"results":"43","hashOfConfig":"44"},{"size":2003,"mtime":1611267782234,"results":"45","hashOfConfig":"28"},{"size":573,"mtime":1611685651173,"results":"46","hashOfConfig":"44"},{"size":1482,"mtime":1611871684193,"results":"47","hashOfConfig":"28"},{"size":4375,"mtime":1611780794080,"results":"48","hashOfConfig":"44"},{"size":15292,"mtime":1611786900484,"results":"49","hashOfConfig":"44"},{"size":690,"mtime":1611786567009,"results":"50","hashOfConfig":"44"},{"size":591,"mtime":1611870232115,"results":"51","hashOfConfig":"44"},{"size":1433,"mtime":1611950341558,"results":"52","hashOfConfig":"28"},{"size":0,"mtime":1611851881915,"results":"53","hashOfConfig":"28"},{"size":920,"mtime":1611950793683,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15ys31f",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"16b61pg",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\email.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\App.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\index.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\stringDiff.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\dictionary.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Bio.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Contact.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Homepage.js",["111","112","113","114"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Resume.js",["115","116","117"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\WordSearchForm.js",["118"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\config\\paths.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Header\\index.js",["119","120","121","122","123","124"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Logo\\index.js",["125"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\Error.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Footer\\index.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Logo\\GithubIcon.js",[],["126","127","128"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\Fonts\\Fonts.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\use-event-listener.js",[],["129","130","131"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Logo\\GithubIcon-lg.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Header\\index1.js",["132","133","134","135"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\pages\\WordSearch2.js",["136","137","138","139","140"],"import React, { useState, useEffect } from 'react'\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  Box,\n  Heading,\n  Center,\n  FormControl,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  InputRightElement,\n  Button,\n  ButtonGroup,\n  Flex,\n  List,\n  ListItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  IconButton,\n  Text,\n  Tooltip,\n  HStack,\n} from '@chakra-ui/react'\nimport { CloseIcon } from '@chakra-ui/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { nanoid } from 'nanoid'\nimport { stringDiff } from '../services/stringDiff2'\nimport { getWords } from '../services/dictionary'\n\nconst SearchForm = () => {\n  const [results, setResults] = useState([])\n  const [userInput, setUserInput] = useState('ba?@')\n  const [userInput2, setUserInput2] = useState('f??@')\n\n  const [exclusions, setExclusions] = useState('')\n  // eslint-disable-next-line no-unused-vars\n  const [copied, setCopied] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const [buttonText, setButtonText] = useState('Sort a-z')\n  const [copiedButton, setCopiedButton] = useState('Copy List')\n  const [notify, setNotify] = useState({ title: '', msg: '' })\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      handleSubmit(event)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  })\n\n  const handleSort = () => {\n    const newResults = [...results]\n    const sort1 = results.sort((a, b) => (a.word < b.word ? 1 : -1))\n    const sort1tog = () => {\n      setToggle(false)\n      setButtonText('Sort a - z')\n\n      setResults(sort1)\n    }\n    const sort2 = newResults.sort((a, b) => (a.word < b.word ? -1 : 1))\n\n    const sort2tog = () => {\n      setToggle(true)\n      setButtonText('Sort z - a')\n\n      setResults(sort2)\n    }\n    toggle === false ? sort2tog() : sort1tog()\n  }\n\n  const filterExclusions = async (arr, reg) => {\n    const exArr = exclusions.split('').join('|')\n    const regx = new RegExp(`${exArr}`, 'g')\n    const reduceArr = arr.reduce((acc, item) => {\n      for (let i in reg) {\n        let currChar = item.word.charAt(reg[i].index)\n        let matchedItem = [...currChar.matchAll(regx)]\n        if (matchedItem.length > 0) {\n          acc.push(item.word)\n        }\n      }\n      return acc\n    }, [])\n\n    const filterArr = arr.filter((obj) => {\n      return reduceArr.includes(obj.word) ? null : obj.word\n    })\n    if (reg[0][0] !== '?') {\n      filterStrings(userInput, filterArr)\n    } else {\n      setResults((state) => [...state, ...filterArr])\n    }\n  }\n\n  const filterStrings = (arr1, arr2) => {\n    return arr2.forEach((obj) => {\n      const newArr = stringDiff(arr1, obj.word)\n\n      if (newArr.error) {\n        setNotify({ msg: `Error: ${newArr.error}; Param: ${obj.word}` })\n      } else if (newArr.results.length > 0) {\n        setResults((state) => [...state, ...newArr.results])\n      } else {\n        return results\n      }\n    })\n  }\n\n  const filterStrings2 = (arr1, arr2, arr3, arr4) => {\n    console.log('arr1', arr1)\n    console.log('arr2', arr2)\n    console.log('arr3', arr3)\n    console.log('arr4', arr4)\n    const res1 = arr2.forEach((obj) => {\n      const newArr = stringDiff(arr1, obj.word)\n\n      if (newArr.error) {\n        setNotify({ msg: `Error: ${newArr.error}; Param: ${obj.word}` })\n      } else if (newArr.results.length > 0) {\n        setResults((state) => [...state, ...newArr.results])\n      } else {\n        return results\n      }\n    })\n\n    const res2 = arr4.forEach((obj) => {\n      const newArr = stringDiff(arr3, obj.word)\n\n      if (newArr.error) {\n        setNotify({ msg: `Error: ${newArr.error}; Param: ${obj.word}` })\n      } else if (newArr.results.length > 0) {\n        setResults((state) => [...state, ...newArr.results])\n      } else {\n        return results\n      }\n    })\n    console.log('res1', res1)\n    console.log('res2', res2)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setResults([])\n    let wildcards1 = [...userInput.matchAll(/\\?/g)]\n    let numeric = userInput.match(/\\d/g)\n    let wildcards2 = [...userInput.matchAll(/\\d/g)]\n    const regx = /\\d/g\n    const numUserInput = userInput.replace(regx, '?')\n    let wildcards3 = [...userInput.matchAll(/@/g)]\n    let wildcards4 = [...userInput2.matchAll(/@/g)]\n    const crossUserInput = userInput.replace(/@/g,'?')\n    const crossUserInput2 = userInput2.replace(/@/g,'?')\n    let r\n    let s\n    if (userInput.length === 0) {\n      onOpen()\n      setNotify({\n        title: 'Form Incomplete',\n        msg: 'Please enter some letters.',\n      })\n      setTimeout(() => {\n        onClose()\n      }, 3000)\n    } else if (userInput.length > 30 || userInput2.length > 30) {\n      onOpen()\n      setNotify({\n        title: 'Whoa hang on a minute',\n        msg:\n          'Word search is limited to 30 characters or less. Please adjust search accordingly.',\n      })\n      setTimeout(() => {\n        onClose()\n      }, 3000)\n    } else if (exclusions.length > 25) {\n      onOpen()\n      setNotify({\n        title: 'Dont be crazy',\n        msg: 'Exclusions are limited to 25 characters or less.',\n      })\n      setTimeout(() => {\n        onClose()\n      }, 3000)\n    } else if (!exclusions) {\n      if (wildcards1.length > 0 || numeric === null) {\n        r = await getWords(userInput)\n        if (userInput2.length > 0) {\n          s = await getWords(userInput2)\n          return filterStrings2(userInput, userInput2, r, s)\n        }\n        setResults((state) => [...state, ...r])\n      } else if (numeric !== null) {\n        r = await getWords(numUserInput)\n        return filterStrings(userInput, r)\n      } else {\n        setNotify({\n          msg: 'something weird happened...',\n        })\n      }\n    } else {\n      if (wildcards1.length > 0) {\n        r = await getWords(userInput)\n        return filterExclusions(r, wildcards1)\n      } else {\n        r = await getWords(numUserInput)\n        return filterExclusions(r, wildcards2)\n      }\n    }\n  }\n\n  const copyResults = () => {\n    return results?.map((obj) => obj.word)\n  }\n\n  const handleCopy = () => {\n    setCopied(true)\n    setCopiedButton('List copied!')\n    setTimeout(() => {\n      setCopiedButton('Copy List')\n    }, 3000)\n  }\n\n  const resetInputField = () => {\n    setUserInput('')\n  }\n\n  const resetInput2Field = () => {\n    setUserInput2('')\n  }\n\n  const resetExclusionsField = () => {\n    setExclusions('')\n  }\n\n  const resetForm = () => {\n    setResults([])\n    setUserInput('')\n    setUserInput2('')\n    setExclusions('')\n    setCopied(false)\n  }\n\n  return (\n    <>\n      <Center h=\"100px\">\n        <Heading bgClip=\"text\" bgGradient=\"linear(to-l, orange.500,#FF0080)\">\n          Word Search\n        </Heading>\n      </Center>\n\n      <Flex width=\"Full\" align=\"center\" justifyContent=\"center\">\n        <Box textAlign=\"left\" w=\"90%\" maxWidth=\"500px\">\n          <Accordion allowMultiple>\n            <AccordionItem>\n              <AccordionButton>\n                <AccordionIcon />\n                <Box flex=\"1\" textAlign=\"left\">\n                  Use one ? for each individual unknown letter.\n                </Box>\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                Example: b?ar might return bear, or boar.\n              </AccordionPanel>\n            </AccordionItem>\n\n            <AccordionItem>\n              <AccordionButton>\n                <AccordionIcon />\n                <Box flex=\"1\" textAlign=\"left\">\n                  Use numeric digits 1 - 9 for two or more of the same letter.\n                </Box>\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                For example, if a word has more than one set of repeating\n                letters, you can use different numbers for different sets of\n                letters. For example, 'balloon' could be 'ba1122n', or\n                'excellence' could be: 1xc1221nc1.\n              </AccordionPanel>\n            </AccordionItem>\n\n            <AccordionItem>\n              <AccordionButton>\n                <AccordionIcon />\n                <Box flex=\"1\" textAlign=\"left\">\n                  (Optional) Exclude or filter specific letters from results.\n                </Box>\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                Any letters entered into the 'exclusions' filter will eliminate\n                any results containing the excluded letter(s) in the wildcard\n                \"?\" position(s). The provided known letters are ignored, i.e.,\n                if your query is 'ba?y', and you exclude the letter 'b', the\n                word 'baby' will NOT be included in the returned list.\n              </AccordionPanel>\n            </AccordionItem>\n          </Accordion>\n\n          <form onSubmit={handleSubmit}>\n            <Box my={4} textAlign=\"left\">\n              <Tooltip\n                label=\"Enter letters a-z, numbers 1-9, or ?\"\n                aria-label=\"Enter letters a-z, numbers 1-9, or ?\"\n              >\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftAddon\n                      children={\n                        <>\n                          <Text>Search </Text>\n                          <Text color=\"tomato\">*</Text>\n                        </>\n                      }\n                    />\n                    <Input\n                      id=\"userinput\"\n                      className=\"search-input\"\n                      type=\"text\"\n                      placeholder=\"ba??\"\n                      maxLength=\"30\"\n                      value={userInput}\n                      onChange={(e) => {\n                        return setUserInput(e.target.value.toLowerCase())\n                      }}\n                    />\n                    {userInput.length > 0 ? (\n                      <InputRightElement\n                        children={\n                          <IconButton\n                            isRound\n                            aria-label=\"reset field\"\n                            size=\"sm\"\n                            icon={<CloseIcon />}\n                            onClick={resetInputField}\n                          />\n                        }\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </InputGroup>\n                </FormControl>\n              </Tooltip>\n              {/* SECOND WORD INPUT */}\n\n              <Tooltip\n                label=\"Enter letters a-z, numbers 1-9, or ?\"\n                aria-label=\"Enter letters a-z, numbers 1-9, or ?\"\n              >\n                <FormControl mt={6}>\n                  <InputGroup>\n                    <InputLeftAddon\n                      children={\n                        <>\n                          <Text>Search </Text>\n                        </>\n                      }\n                    />\n                    <Input\n                      id=\"userinput\"\n                      className=\"search-input\"\n                      type=\"text\"\n                      placeholder=\"f??l\"\n                      maxLength=\"30\"\n                      value={userInput2}\n                      onChange={(e) => {\n                        return setUserInput2(e.target.value.toLowerCase())\n                      }}\n                    />\n                    {userInput.length > 0 ? (\n                      <InputRightElement\n                        children={\n                          <IconButton\n                            isRound\n                            aria-label=\"reset field\"\n                            size=\"sm\"\n                            icon={<CloseIcon />}\n                            onClick={resetInput2Field}\n                          />\n                        }\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </InputGroup>\n                </FormControl>\n              </Tooltip>\n\n              {/* SECOND WORD INPUT */}\n              <Tooltip\n                label=\"Enter any letters you do not want included in search results.\"\n                aria-label=\"Enter any letters you do not want included in search results.\"\n              >\n                <FormControl mt={6}>\n                  <InputGroup>\n                    <InputLeftAddon children=\"Exclude\" />\n                    <Input\n                      className=\"search-input\"\n                      type=\"text\"\n                      maxLength=\"25\"\n                      value={exclusions}\n                      placeholder=\"xyz\"\n                      onChange={({ target }) =>\n                        setExclusions(target.value.toLowerCase())\n                      }\n                    />\n                    {exclusions.length > 0 ? (\n                      <InputRightElement\n                        children={\n                          <IconButton\n                            isRound\n                            aria-label=\"reset field\"\n                            size=\"sm\"\n                            icon={<CloseIcon />}\n                            onClick={resetExclusionsField}\n                          />\n                        }\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </InputGroup>\n                </FormControl>\n              </Tooltip>\n            </Box>\n            <Box my={8} textAlign=\"left\">\n              <ButtonGroup spacing=\"2\">\n                <Button size=\"sm\" type=\"submit\">\n                  Search\n                </Button>\n                <Modal isOpen={isOpen} onClose={onClose} isCentered>\n                  <ModalOverlay />\n                  <ModalContent>\n                    <ModalHeader>{notify.title} </ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody>{notify.msg} </ModalBody>\n                  </ModalContent>\n                </Modal>\n\n                {results.length > 0 ? (\n                  <>\n                    <Button size=\"sm\" onClick={handleSort}>\n                      {buttonText}\n                    </Button>\n                    <CopyToClipboard\n                      className=\"CopyToClipboard\"\n                      text={copyResults()}\n                      onCopy={handleCopy}\n                    >\n                      <Button size=\"sm\">{copiedButton} </Button>\n                    </CopyToClipboard>\n                    <Button size=\"sm\" onClick={resetForm}>\n                      Reset Form\n                    </Button>\n                  </>\n                ) : (\n                  <></>\n                )}\n              </ButtonGroup>\n\n              <List\n                verticalAlign=\"middle\"\n                value={results}\n                onChange={() => setCopied(false)}\n              >\n                {results?.map((obj) => (\n                  <ListItem key={nanoid()}>{obj.word}</ListItem>\n                ))}\n              </List>\n            </Box>\n          </form>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n\nexport default SearchForm\n","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\services\\stringDiff2.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\ColorSwitch\\index.js",["141","142","143"],"import React from 'react'\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from '@chakra-ui/react'\nimport { FaMoon, FaSun } from 'react-icons/fa'\nimport { Logo, Sun } from '../Logo'\n\nexport const ColorModeSwitcher = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue('dark', 'light')\n  const SwitchIcon = useColorModeValue(FaMoon, Sun)\n\n  return (\n    <IconButton\n      {...props}\n      aria-label={`Switch to ${text} mode`}\n      variant=\"link\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n    />\n  )\n}\n","C:\\Users\\Owner\\webdev\\react-portfolio\\src\\theme\\index.js",["144","145"],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\theme\\styles.js",[],"C:\\Users\\Owner\\webdev\\react-portfolio\\src\\components\\Button\\index.js",[],{"ruleId":"146","severity":1,"message":"147","line":7,"column":3,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"146","severity":1,"message":"150","line":10,"column":10,"nodeType":"148","messageId":"149","endLine":10,"endColumn":23},{"ruleId":"146","severity":1,"message":"151","line":10,"column":25,"nodeType":"148","messageId":"149","endLine":10,"endColumn":33},{"ruleId":"146","severity":1,"message":"152","line":10,"column":35,"nodeType":"148","messageId":"149","endLine":10,"endColumn":42},{"ruleId":"146","severity":1,"message":"153","line":2,"column":18,"nodeType":"148","messageId":"149","endLine":2,"endColumn":22},{"ruleId":"146","severity":1,"message":"154","line":2,"column":24,"nodeType":"148","messageId":"149","endLine":2,"endColumn":27},{"ruleId":"146","severity":1,"message":"155","line":2,"column":37,"nodeType":"148","messageId":"149","endLine":2,"endColumn":46},{"ruleId":"146","severity":1,"message":"156","line":32,"column":3,"nodeType":"148","messageId":"149","endLine":32,"endColumn":9},{"ruleId":"146","severity":1,"message":"157","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":38},{"ruleId":"146","severity":1,"message":"158","line":8,"column":3,"nodeType":"148","messageId":"149","endLine":8,"endColumn":7},{"ruleId":"146","severity":1,"message":"151","line":22,"column":25,"nodeType":"148","messageId":"149","endLine":22,"endColumn":33},{"ruleId":"146","severity":1,"message":"152","line":22,"column":35,"nodeType":"148","messageId":"149","endLine":22,"endColumn":42},{"ruleId":"146","severity":1,"message":"159","line":23,"column":10,"nodeType":"148","messageId":"149","endLine":23,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":76,"column":6,"nodeType":"162","endLine":76,"endColumn":8,"suggestions":"163"},{"ruleId":"146","severity":1,"message":"164","line":2,"column":16,"nodeType":"148","messageId":"149","endLine":2,"endColumn":21},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"165","replacedBy":"171"},{"ruleId":"167","replacedBy":"172"},{"ruleId":"169","replacedBy":"173"},{"ruleId":"146","severity":1,"message":"174","line":1,"column":52,"nodeType":"148","messageId":"149","endLine":1,"endColumn":61},{"ruleId":"146","severity":1,"message":"158","line":8,"column":3,"nodeType":"148","messageId":"149","endLine":8,"endColumn":7},{"ruleId":"146","severity":1,"message":"175","line":26,"column":8,"nodeType":"148","messageId":"149","endLine":26,"endColumn":24},{"ruleId":"160","severity":1,"message":"176","line":79,"column":6,"nodeType":"162","endLine":79,"endColumn":8,"suggestions":"177"},{"ruleId":"146","severity":1,"message":"156","line":31,"column":3,"nodeType":"148","messageId":"149","endLine":31,"endColumn":9},{"ruleId":"146","severity":1,"message":"178","line":165,"column":9,"nodeType":"148","messageId":"149","endLine":165,"endColumn":19},{"ruleId":"146","severity":1,"message":"179","line":166,"column":9,"nodeType":"148","messageId":"149","endLine":166,"endColumn":19},{"ruleId":"146","severity":1,"message":"180","line":167,"column":11,"nodeType":"148","messageId":"149","endLine":167,"endColumn":25},{"ruleId":"146","severity":1,"message":"181","line":168,"column":11,"nodeType":"148","messageId":"149","endLine":168,"endColumn":26},{"ruleId":"146","severity":1,"message":"182","line":6,"column":3,"nodeType":"148","messageId":"149","endLine":6,"endColumn":18},{"ruleId":"146","severity":1,"message":"183","line":8,"column":18,"nodeType":"148","messageId":"149","endLine":8,"endColumn":23},{"ruleId":"146","severity":1,"message":"184","line":9,"column":10,"nodeType":"148","messageId":"149","endLine":9,"endColumn":14},{"ruleId":"146","severity":1,"message":"185","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"186","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":14},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'HamburgerIcon' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'Flex' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'HStack' is defined but never used.","'useCallback' is defined but never used.","'Text' is defined but never used.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'Image' is defined but never used.","jsx-a11y/accessible-emoji",[],"no-native-reassign",["188"],"no-negated-in-lhs",["189"],[],["188"],["189"],"'useEffect' is defined but never used.","'useEventListener' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["190"],"'wildcards3' is assigned a value but never used.","'wildcards4' is assigned a value but never used.","'crossUserInput' is assigned a value but never used.","'crossUserInput2' is assigned a value but never used.","'IconButtonProps' is defined but never used.","'FaSun' is defined but never used.","'Logo' is defined but never used.","'styles' is defined but never used.","'Button' is defined but never used.",{"desc":"191","fix":"192"},"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"193"},"Update the dependencies array to be: [handleScroll]",{"range":"194","text":"195"},{"range":"196","text":"195"},[1818,1820],"[handleScroll]",[1951,1953]]